{% extends "base.html.twig" %}

{% block title %}
{{ 'home'|trans }} - HAY
{% endblock %}

{% block body %}

{{ include("menu.html.twig") }}
<div class="filter">
    <div>
        <i class="icofont icofont-world fs26"></i>
    </div>
    <span style="top: 0px;">{{ 'scope'|trans }}
        <select id="scope">
            <option value="all" selected>{{ 'scope_world'|trans }}</option>{#
            <optgroup label="{{ 'scope_friends'|trans }}">
                <option value="friends">{{ 'scope_friends'|trans }}</option>
                <option value="frd_and_frd">{{ 'scope_frd_and_frd'|trans }}</option>
            </optgroup>
            <optgroup label="{{ 'scope_sub'|trans }}">
            <option value="subscribed">{{ 'scope_sub'|trans }}</option>
            <option value="sub_users">{{ 'scope_sub_users'|trans }}</option>
            <option value="sub_pages">{{ 'scope_sub_pages'|trans }}</option>
            <option value="sub_groups">{{ 'scope_sub_groups'|trans }}</option>
            </optgroup>
            <option value="moderation">{{ 'scope_mod'|trans }}</option>
            <option value="my_posts">{{ 'scope_my_posts'|trans }}</option>#}
        </select>
        <label for="scope"><i class="icofont icofont-caret-down fs16"></i></label>
    </span>
    <div>
        <i class="icofont icofont-ui-messaging fs26"></i>
    </div>
    <span style="top: 50px;">{{ 'limit'|trans }}<input id="limit" type="number" min="1" max="100" value="10" /></span>
    <div>
        <i class="icofont icofont-loop fs26"></i>
    </div>
    <span style="top: 100px;">{{ 'order'|trans }}<select id="order">
        <option value="DESC" selected>{{ 'order_desc'|trans }}</option>
        <option value="ASC">{{ 'order_asc'|trans }}</option>
    </select><label for="scope"><i class="icofont icofont-caret-down fs16"></i></label></span>{#
    <div>
        <i class="icofont icofont-clock-time fs26"></i>
    </div>
    <span style="top: 150px;"><input id="date_begin" type="date" /><input id="date_end" type="date" /></span>#}
    <div style="cursor: pointer;" onclick="filterPosts();">
        <i class="icofont icofont-arrow-right fs26"></i>
    </div>
    {% if app.user %}
    <div>
        <i class="icofont icofont-diskette fs26"></i>
    </div>
    <span style="top: {#250px#}200px;">
        <button style="cursor: pointer;" onclick="recordAsDefault();">{{ 'record'|trans }}</button>
    </span>
    {% endif %}
</div>
{% if app.user %}{{ include("post/postForm.html.twig") }}{% endif %}
{{ include("post/newPosts.html.twig") }}
{{ include("post/postDisplay.html.twig") }}

<div class="warning" id="filterReady" style="background: green; display: none">
    {{ 'filterReady'|trans }}
    <span id="closeFilterReady" onclick="parentNode.">
        <i class="icofont icofont-close-line"></i>
    </span>
</div>

<div class="warning" id="filterError" style="background: red; display: none">
    {{ 'filterError'|trans }}
    <span id="closeFilterError" onclick="parentNode.">
        <i class="icofont icofont-close-line"></i>
    </span>
</div>

{% endblock %}

{% block js %}
<script>

function filterPosts() {
    scope = document.getElementById("scope").value
    limit = document.getElementById("limit").value
    order = document.getElementById("order").value

    url = "{{ url('app_home') }}" + "/filter/" + scope + "/" + limit + "/" + order

    window.location = url
}

function recordAsDefault() {
    url_scope = "{{ url('settings_edit', {'setting': 'default_home_scope_filter', 'value': 'aaa'}) }}"
    url_scope = url_scope.replace("aaa", document.getElementById("scope").value)

    url_limit = "{{ url('settings_edit', {'setting': 'default_home_limit_filter', 'value': 'aaa'}) }}"
    url_limit = url_limit.replace("aaa", document.getElementById("limit").value)

    url_order = "{{ url('settings_edit', {'setting': 'default_home_order_filter', 'value': 'aaa'}) }}"
    url_order = url_order.replace("aaa", document.getElementById("order").value)

    success = false

    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            if (this.responseText === "true") {
                success = true
            } else {
                success = false
            }
        }
    };
    xmlhttp.open("GET", url_scope, true);
    xmlhttp.send();

    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            if (this.responseText === "true") {
                success = true
            } else {
                success = false
            }
        }
    };
    xmlhttp.open("GET", url_limit, true);
    xmlhttp.send();

    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            if (this.responseText === "true") {
                success = true
            } else {
                success = false
            }
        }
    };
    xmlhttp.open("GET", url_order, true);
    xmlhttp.send();

    //if (success === true) {
        document.getElementById("filterReady").style.display = "block";
    //} else {
    //    document.getElementById("filterError").style.display = "block";
    //}
}

function closeFilterReady() {
    var close = document.getElementById("filterReady");
    close.style.display = "none";
}

var closeButton = document.getElementById("closeFilterReady")
closeButton.addEventListener('click', closeFilterReady)

function closeFilterError() {
    var close = document.getElementById("filterError");
    close.style.display = "none";
}

var closeButtonError = document.getElementById("closeFilterError")
closeButtonError.addEventListener('click', closeFilterError)

function changeColor(e) {
    color = "c" + e['target'].value
    textarea = document.getElementsByClassName('textarea')
    classes = textarea[0].className
    classes = classes.split("c")
    classes[0] += color
    textarea[0].className = classes[0]
}

function changeSize(e) {
    size = "fs" + e['target'].value
    textarea = document.getElementsByClassName('ta')
    classes = textarea[0].className
    classes = classes.split("fs")
    classes[0] += size
    textarea[0].className = classes[0]

    sizeDisplay = document.getElementsByClassName('sizeDisplay')
    classesSize = sizeDisplay[0].className
    classesSize = classesSize.split("fs")
    classesSize[0] += size
    sizeDisplay[0].className = classesSize[0]
}

document.getElementsByName('form[color]').forEach(function(element) {
    element.addEventListener('change', changeColor)
})

document.getElementsByName('form[size]').forEach(function(element) {
    element.addEventListener('change', changeSize)
})

document.getElementById('form_color_2').checked = true

</script>
{% endblock %}
