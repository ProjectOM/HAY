{% if order == "DESC" %}
<div class="newPosts fs16 ffSS" onclick="getNewPosts()">
    <span id="nbNewPosts">0</span>&nbsp;{{ 'new_posts_sent'|trans }}
</div>
<script>
// Creating the request URLs.
var url = "{{ url('post_sended', {'last_id': postList[0].id, 'scope': scope, 'user_id': user.id ?? null, 'order': order}) }}";
var url_r = "{{ url('post_rendered', {'last_id': postList[0].id, 'scope': scope, 'user_id': user.id ?? null, 'order': order}) }}";

/**
 * Getting the number of new posts
 */
function getNbNewPosts() {
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            // Inserting the response text inside the #nbNewPosts Element.
            document.getElementById("nbNewPosts").innerHTML = this.responseText;

            // Deciding if the .newPosts Element is displayed.
            if (Number(this.responseText) > 0) {
                document.getElementsByClassName("newPosts")[0].style.display = "flex";
            } else {
                document.getElementsByClassName("newPosts")[0].style.display = "none";
            }
        }
    };
    xmlhttp.open("GET", url, true);
    xmlhttp.send();
}

/**
 * Inserting the new posts and modifying the urls
 */
function getNewPosts() {
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            // First of all we fetch the new posts.
            newPosts = this.responseText;

            // Then we split the result to retrieve the new $last_id.
            splited_posts = newPosts.split('/');

            // We change the old $last_id by the new one:
            // 1. We split the url with a '/' as seperator.
            splited_url = url.split('/');
            // 2. We select the $last_id index.
            i = splited_url.indexOf("post") + 1;
            // 3. We replace the old $last_id.
            splited_url[i] = splited_posts[0];
            // 4. And we join everything together to have a new URL with the new $last_id.
            url = splited_url.join('/');

            // We make exactly the same process but this time with the render URL.
            splited_url = url_r.split('/');
            i = splited_url.indexOf("post") + 1;
            splited_url[i] = splited_posts[0];
            url_r = splited_url.join('/');

            // We remove the $last_id that was sended with the response.
            splited_posts.splice(0, 1);

            // And we join everything together to get only the HTML code.
            newPosts = splited_posts.join('/');

            // And we insert it before the first .text Element.
            document.getElementsByClassName("text")[0].insertAdjacentHTML('beforebegin', newPosts);

            // And we refresh the number of new posts.
            getNbNewPosts();
        }
    };
    xmlhttp.open("GET", url_r, true);
    xmlhttp.send();
}

// Adding an interval of 10 seconds between each request.
setInterval(getNbNewPosts, 10000);
</script>
{% endif %}
