{% extends "base.html.twig" %}

{% block title %}
{{ 'root_area'|trans }} - HAY
{% endblock %}

{% block body %}
{{ include("menu.html.twig") }}
<div class="userMenu fs16 ffSS">
    <a href="#" onclick="openTab('edit_website')">{{ 'edit_website'|trans }}<i class="icofont-thin-double-right"></i></a>
    <a href="#" onclick="openTab('statistics')">{{ 'statistics'|trans }}<i class="icofont-thin-double-right"></i></a>
    <a href="#" onclick="openTab('manage_roles')">{{ 'manage_roles'|trans }}<i class="icofont-thin-double-right"></i></a>
    <a href="#" onclick="openTab('manage_authorization')" style="background-color: yellow; color: black;">{{ 'manage_authorization'|trans }}<i class="icofont-thin-double-right"></i></a>
    <a href="#" onclick="openTab('manage_laws')">{{ 'manage_laws'|trans }}<i class="icofont-thin-double-right"></i></a>
    <a href="#" onclick="openTab('sql_interface')">{{ 'sql_interface'|trans }}<i class="icofont-thin-double-right"></i></a>
    <a href="#" onclick="openTab('manage_policy')">{{ 'manage_policy'|trans }}<i class="icofont-thin-double-right"></i></a>
</div>

{{ form_start(form) }}
<div class="tabContent" id="edit_website">
    <h1>{{ 'edit_website'|trans }}</h1>
    <label><img src="/ressources/HAYlogo.svg" width="256px" height="256px" /><br />{{ 'image_type_svg'|trans }} {{ 'logo'|trans }}<br />{{ form_widget(form.HAYlogo, {'attr': {'accept': 'image/svg+xml'}}) }}</label>
    <label><img src="/ressources/icon.svg" width="256px" height="256px" /><br />{{ 'image_type_svg'|trans }} {{ 'default_profile_picture'|trans }}<br />{{ form_widget(form.icon, {'attr': {'accept': 'image/svg+xml'}}) }}</label>
    <label class="submit" style="grid-column: 1/3;" for="form_version">{{ 'show_version'|trans }}{{ form_widget(form.version) }}</label>
    {{ form_widget(form.submit, {'attr': {'class': 'submit', 'style': 'grid-column: 1/3;'}, 'label': 'edit'|trans}) }}
</div>
<div class="tabContent" id="statistics">
    <h1 style="margin-bottom: 0;">{{ 'statistics'|trans }}</h1>
    <div class="criteria">
        Crit√®res :
        <span style="float: right;">
            <select id="type" onchange="change_img()">
                <option value="visits" selected>{{ 'visits'|trans }}</option>
                <option value="requests">{{ 'requests'|trans }}</option>
                <option value="new_users">{{ 'new_users'|trans }}</option>
                <option value="new_posts">{{ 'new_posts'|trans }}</option>
                <option value="new_comments">{{ 'new_comments'|trans }}</option>
            </select>
            <select id="scope" onchange="change_img()">
                <option value="day" selected>{{ 'day'|trans }}</option>
                <option value="month">{{ 'month'|trans }}</option>
                <option value="year">{{ 'year'|trans }}</option>
            </select>
            <input id="n" type="number" value="0" min="0" onchange="change_img()" />
        </span>
    </div>
    <img src="{{ url('statistics_graph', {'type': 'visits', 'scope': 'day'}) }}" id="stat_img" />
    <script>
        function change_img() {
            url = "{{ url('statistics_graph', {'type': 'aaa', 'scope': 'bbb', 'n': 'ccc'}) }}"

            type = document.getElementById("type").value
            scope = document.getElementById("scope").value
            n = document.getElementById("n").value

            url = url.replace('aaa', type)
            url = url.replace('bbb', scope)
            url = url.replace('ccc', n)

            document.getElementById("stat_img").src = url
        }
    </script>
</div>
<div class="tabContent" id="manage_roles">
    <h1>{{ 'manage_roles'|trans }}</h1>
    <div>
        <div style="height: 50px;">
            <input class="search" style="width: calc(100% - 53px);" type="search" placeholder="{{ 'user_id'|trans }}" id="userSearch" />
            <button class="confirm" type="button" onclick="searchUserById()"><i class="icofont-search"></i></button>
        </div>
        <div class="userRolesShow fs20">
            <img id="userImg" src="/ressources/icon.svg" height="150px" width="150px" />
            <span id="userInfo" style="display: flex; align-items: center;">{{ 'first_name'|trans }} / {{ 'last_name'|trans }}<br />{{ 'username'|trans }}</span>
            <span id="nPosts" style="text-align: center;">xxx</span><span>{{ 'number_of_posts'|trans }}</span>
            <span id="nComments" style="text-align: center;">xxx</span><span>{{ 'number_of_comments'|trans }}</span>
            <span id="nFriends" style="text-align: center;">xxx</span><span>{{ 'number_of_friends'|trans }}</span>
            <span id="dSignUp" style="text-align: center;">xxxx</span><span>{{ 'date_sign_up'|trans }}</span>
        </div>
    </div>
    <div class="userRolesEdit">
        <h1>{{ 'his_roles'|trans }}</h1>
        <div class="fs50" style="display: grid; grid-template-columns: 90% 10%; grid-template-rows: auto 35px; margin: 50px;">
            <span id="userRoles" class="user" style="grid-column: 1/3; text-align: center; border-top-left-radius: 20px; border-top-right-radius: 20px;">{{ 'user'|trans }}</span>
            <select id="userRolesSelect" style="border: 0; text-align: center; cursor: pointer;">
                <option value="user" selected>{{ 'user'|trans }}</option>
                <option value="helper">{{ 'helper'|trans }}</option>
                <option value="mod">{{ 'mod'|trans }}</option>
                <option value="dev">{{ 'dev'|trans }}</option>
                <option value="design">{{ 'design'|trans }}</option>
                <option value="trans">{{ 'trans'|trans }}</option>
                {% if is_granted('ROLE_ROOT') %}<option value="admin">{{ 'admin'|trans }}</option>{% endif %}
                {% if is_granted('ROLE_OWNER') %}<option value="root">{{ 'root'|trans }}</option>{% endif %}
            </select>
            <button type="button" style="border: 0; background-color: blue; color: white; cursor: pointer;" onclick="changeUserRole()"><i class="icofont-arrow-right"></i></button>
        </div>
    </div>
    <script>
        function searchUserById() {
            user_search = "{{ url('security_admin_get_roles', {'user': 'aaa'}) }}"

            user_search = user_search.replace('aaa', document.getElementById('userSearch').value)

            var xmlhttp = new XMLHttpRequest();
            xmlhttp.responseType = "json";
            xmlhttp.onreadystatechange = function() {
                user = "{{ 'user'|trans }}"
                helper = "{{ 'helper'|trans }}"
                dev = "{{ 'dev'|trans }}"
                design = "{{ 'design'|trans }}"
                trans = "{{ 'trans'|trans }}"
                mod = "{{ 'mod'|trans }}"
                admin = "{{ 'admin'|trans }}"
                root = "{{ 'root'|trans }}"
                owner = "{{ 'owner'|trans }}"

                user_info = this.response
                document.getElementById('userImg').src = user_info.img
                document.getElementById('userInfo').innerHTML = user_info.name
                if (user_info.username) {
                    document.getElementById('userInfo').innerHTML += '<br />' + user_info.username
                }
                document.getElementById('nPosts').innerHTML = user_info.nbPosts
                document.getElementById('nComments').innerHTML = user_info.nbComments
                document.getElementById('nFriends').innerHTML = user_info.nbFriends
                document.getElementById('dSignUp').innerHTML = user_info.dateSignUp

                role = user_info.roles[0]

                switch (role) {
                    case 'ROLE_USER':
                        usr_role = "user";
                        usr_trans = user;
                        break;
                    case 'ROLE_HELPER':
                        usr_role = "helper";
                        usr_trans = helper;
                        break;
                    case 'ROLE_DEV':
                        usr_role = "dev";
                        usr_trans = dev;
                        break;
                    case 'ROLE_DESIGN':
                        usr_role = "design";
                        usr_trans = design;
                        break;
                    case 'ROLE_TRANS':
                        usr_role = "trans";
                        usr_trans = trans;
                        break;
                    case 'ROLE_MOD':
                        usr_role = "mod";
                        usr_trans = mod;
                        break;
                    case 'ROLE_ADMIN':
                        usr_role = "admin";
                        usr_trans = admin;
                        break;
                    case 'ROLE_ROOT':
                        usr_role = "root";
                        usr_trans = root;
                        break;
                    case 'ROLE_OWNER':
                        usr_role = "owner";
                        usr_trans = owner;
                        break;
                }

                document.getElementById('userRoles').className = usr_role
                document.getElementById('userRoles').innerHTML = usr_trans
                document.getElementById('userRolesSelect').value = usr_role

                if (usr_role == "owner"{% if not is_granted('ROLE_OWNER') %} || usr_role == "root"{% if not is_granted('ROLE_ROOT') %} || usr_role == "admin"{% endif %}{% endif %}) {
                    document.getElementById('userRolesSelect').disabled = true
                } else {
                    document.getElementById('userRolesSelect').disabled = false
                }
            };
            xmlhttp.open("GET", user_search, true);
            xmlhttp.send();
        }

        function disableSendForm(event) {
            if (event.which === 13) {
                event.preventDefault()
                searchUserById()
            }
        }

        document.getElementById('userSearch').addEventListener("keypress", disableSendForm)

        function changeUserRole() {
            user_role_url = "{{ url('security_admin_manage_roles', {'new_role': 'aaa', 'user': 'bbb'}) }}"

            user_role_url = user_role_url.replace('aaa', document.getElementById('userRolesSelect').value)
            user_role_url = user_role_url.replace('bbb', document.getElementById('userSearch').value)

            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function() {
                searchUserById()
            };
            xmlhttp.onerror = function() {
            };
            xmlhttp.open("GET", user_role_url, true);
            xmlhttp.send();
        }
    </script>
</div>
<div class="tabContent" id="manage_authorization">
    <h1 style="margin-bottom: 0;">{{ 'manage_authorization'|trans }}</h1>
    <div class="criteria" style="display: flex; padding: 0px; height: 40px;">
        <a href="#" onclick="openSubTab('subTabUser')" class="user"><span>{{ 'user'|trans }}</span></a>
        <a href="#" onclick="openSubTab('subTabHelper')" class="helper"><span>{{ 'helper'|trans }}</span></a>
        <a href="#" onclick="openSubTab('subTabDev')" class="dev"><span>{{ 'dev'|trans }}</span></a>
        <a href="#" onclick="openSubTab('subTabDesign')" class="design"><span>{{ 'design'|trans }}</span></a>
        <a href="#" onclick="openSubTab('subTabTrans')" class="trans"><span>{{ 'trans'|trans }}</span></a>
        <a href="#" onclick="openSubTab('subTabMod')" class="mod"><span>{{ 'mod'|trans }}</span></a>
        <a href="#" onclick="openSubTab('subTabAdmin')" class="admin"><span>{{ 'admin'|trans }}</span></a>
        {% if is_granted('ROLE_OWNER') %}<a href="#" onclick="openSubTab('subTabRoot')" class="root"><span>{{ 'root'|trans }}</span></a>{% endif %}
    </div>
    <div class="subTabContent" id="subTabUser">
        <h1>{{ 'user'|trans }}</h1>
    </div>
    <div class="subTabContent" id="subTabHelper">
        <h1>{{ 'helper'|trans }}</h1>
    </div>
    <div class="subTabContent" id="subTabDev">
        <h1>{{ 'dev'|trans }}</h1>
    </div>
    <div class="subTabContent" id="subTabDesign">
        <h1>{{ 'design'|trans }}</h1>
    </div>
    <div class="subTabContent" id="subTabTrans">
        <h1>{{ 'trans'|trans }}</h1>
    </div>
    <div class="subTabContent" id="subTabMod">
        <h1>{{ 'mod'|trans }}</h1>
    </div>
    <div class="subTabContent" id="subTabAdmin">
        <h1>{{ 'admin'|trans }}</h1>
    </div>
    {% if is_granted('ROLE_OWNER') %}
    <div class="subTabContent" id="subTabRoot">
        <h1>{{ 'root'|trans }}</h1>
    </div>
    {% endif %}
    <label class="submit" for="form_submit" style="grid-column: 1/3; display: none;" id="submit_authorization">{{ 'edit'|trans }}</label>
</div>
<div class="tabContent" id="manage_laws">
    <h1>{{ 'manage_laws'|trans }}</h1>
    <div style="display: flex; height: 50vh; width: 100%; grid-column: 1/3;">
        <a class="fs40" style="margin: auto; background-color: var(--hay-color); border-radius: 50px; padding: 20px;" href="{{ url('laws') }}">{{ 'see_laws'|trans }}</a>
    </div>
</div>
<div class="tabContent" id="sql_interface">
    <h1 style="margin-bottom: 0;">{{ 'sql_interface'|trans }}</h1>
    <div class="criteria" style="display: flex; padding: 0px; height: 40px;">
        {% for entity in entities %}
            <a href="#" id="sql_{{ entity|lower }}" onclick="showSQLEntity('{{ entity|lower }}')"><span>{{ entity }}</span></a>
        {% endfor %}
    </div>
    <div id="sql_table" style="grid-column: 1/3; white-space: nowrap; overflow-x: scroll;">
    </div>
    <label style="grid-column: 1/3; border-bottom: 2px solid var(--hay-color); margin: 15px 0;"><input type="radio" name="filter" id="filter_simple" onclick="changeFilter()" checked />Filtres Simples</label>
    <div style="grid-column: 1/3; display: grid; grid-template-columns: 50% 50%;">
        <span>{{ 'max_results'|trans }} <input type="number" id="sql_max" min="1" max="500" value="10" onchange="showSQLEntity(last_entity)" /></span>
        <span>{{ 'first_result'|trans }} <input type="number" id="sql_first" min="1" value="1" onchange="showSQLEntity(last_entity)" /></span>
    </div>
    <label style="grid-column: 1/3; border-bottom: 2px solid red; margin-top: 15px;"><input type="radio" name="filter" id="filter_advanced" onclick="changeFilter()" />Filtres Avanc√©s</label>
    <span style="grid-column: 1/3; background-color: red; padding: 15px; text-align: center; margin-bottom: 15px;">{{ 'DANGER'|trans }}</span>
    <div class="sql_advanced">
        <span id="sql_1_operation" class="sql_1" style="grid-column: 1; grid-row: 1;">SELECT</span>
        <span id="sql_1_column" class="sql_1" style="grid-column: 2; grid-row: 1;"><select></select></span>
        <span style="grid-column: 1; grid-row: 99;"><button type="button" style="float: left; background-color: blue; border: 0; padding: 10px; grid-column: 7; cursor: pointer;" onclick="showSQLEntity(last_entity, true);"><i class="icofont-arrow-right"></i></button></span>
        <span style="grid-column: 6; grid-row: 99;"><button type="button" style="float: right; background-color: green; border: 0; padding: 10px; grid-column: 7; cursor: pointer;" onclick="addSQLQuery();"><i class="icofont-ui-add"></i></button></span>
    </div>
    <script>
        var last_entity = 'NULL'
        var filter_nb = 1

        function showSQLEntity(entity, adv = false) {
            if (entity !== 'NULL') {
                last_entity = entity

                if (!adv) {
                    url = "{{ url('security_root_sql', {'entity': 'aaa', 'max': 'bbb', 'first': 'ccc'}) }}"
                    url = url.replace('aaa', entity)
                    url = url.replace('bbb', document.getElementById('sql_max').value)
                    url = url.replace('ccc', document.getElementById('sql_first').value)

                    var xmlhttp = new XMLHttpRequest();
                    xmlhttp.onreadystatechange = function() {
                        document.getElementById("sql_table").innerHTML = this.responseText;
                    };
                    xmlhttp.open("GET", url, true);
                    xmlhttp.send();
                } else {
                    url = "{{ url('security_root_sql', {'entity': 'aaa'}) }}"
                    url = url.replace('aaa', entity)

                    param = getAdvParam()

                    var xmlhttp = new XMLHttpRequest();
                    xmlhttp.open("POST", url, true);
                    xmlhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                    xmlhttp.onreadystatechange = function() {
                        document.getElementById("sql_table").innerHTML = this.responseText;
                    };
                    xmlhttp.send(param);
                }

                getColumn()
            }
        }

        function changeFilter() {
            value_simple = !document.getElementById('filter_simple').checked
            document.getElementById('sql_max').disabled = value_simple
            document.getElementById('sql_first').disabled = value_simple

            value_advanced = !document.getElementById('filter_advanced').checked
            sql_adv = document.getElementsByClassName("sql_advanced")[0]
            sql_adv.childNodes.forEach(function(elt) {
                elt.childNodes.forEach(function(elt2) {
                    elt2.disabled = value_advanced
                })
            })
        }

        function addSQLQuery() {
            filter_nb++;
            sql_html = `
                <span id="sql_` + filter_nb + `_operation" class="sql_` + filter_nb + `" style="grid-column: 1; grid-row: ` + filter_nb + `;">
                    <select onchange="changeSQLQuery(` + filter_nb + `);">
                        <option value="SELECT">SELECT</option>
                        <option value="WHERE">WHERE</option>
                        <option value="ORDER BY">ORDER BY</option>
                        <option value="LIMIT">LIMIT</option>
                    </select>
                </span>
                <span id="sql_` + filter_nb + `_column" class="sql_` + filter_nb + `" style="grid-column: 2; grid-row: ` + filter_nb + `;"><select></select></span>
                <span id="sql_` + filter_nb + `_comparison" class="sql_` + filter_nb + `" style="grid-column: 3; grid-row: ` + filter_nb + `;"></span>
                <span id="sql_` + filter_nb + `_data" class="sql_` + filter_nb + `" style="grid-column: 4; grid-row: ` + filter_nb + `;"><input type="text" /></span>
                <span id="sql_` + filter_nb + `_order" class="sql_` + filter_nb + `" style="grid-column: 5; grid-row: ` + filter_nb + `;">
                    <select>
                        <option value="DESC">DESC</option>
                        <option value="ASC">ASC</option>
                    </select>
                </span>
                <span class="sql_` + filter_nb + `" style="grid-column: 6; grid-row: ` + filter_nb + `;"><button type="button" style="float: right; background-color: red; border: 0; padding: 10px; cursor: pointer;" onclick="deleteSQLQuery(` + filter_nb + `);"><i class="icofont-ui-remove"></i></button></span>
            `;
            sql_adv = document.getElementsByClassName("sql_advanced")[0];
            sql_adv.innerHTML = sql_html + sql_adv.innerHTML;
            changeSQLQuery(filter_nb);
            getColumn();
        }

        function deleteSQLQuery(nb) {
            sql_elt = document.getElementsByClassName("sql_" + nb)

            for (i = 0; i < 6; i++) {
                sql_elt[0].parentNode.removeChild(sql_elt[0])
            }
        }

        function changeSQLQuery(nb) {
            value = document.getElementById('sql_' + nb + '_operation').children[0].value

            if (value == "SELECT") {
                document.getElementById('sql_' + nb + '_column').style.display = "grid";
                document.getElementById('sql_' + nb + '_comparison').style.display = "none";
                document.getElementById('sql_' + nb + '_data').style.display = "none";
                document.getElementById('sql_' + nb + '_order').style.display = "none";
            } else if (value == "WHERE") {
                document.getElementById('sql_' + nb + '_column').style.display = "grid";
                document.getElementById('sql_' + nb + '_comparison').style.display = "grid";
                document.getElementById('sql_' + nb + '_data').style.display = "grid";
                document.getElementById('sql_' + nb + '_order').style.display = "none";

                document.getElementById('sql_' + nb + '_comparison').innerHTML = `
                    <select>
                        <option value="=">=</option>
                        <option value="!=">!=</option>
                        <option value="<">&lt;</option>
                        <option value=">">&gt;</option>
                        <option value="<=">&lt;=</option>
                        <option value=">=">&gt;=</option>
                    </select>
                `;
                document.getElementById('sql_' + nb + '_data').children[0].type = "text";
            } else if (value == "ORDER BY") {
                document.getElementById('sql_' + nb + '_column').style.display = "grid";
                document.getElementById('sql_' + nb + '_comparison').style.display = "none";
                document.getElementById('sql_' + nb + '_data').style.display = "none";
                document.getElementById('sql_' + nb + '_order').style.display = "grid";
            } else if (value == "LIMIT") {
                document.getElementById('sql_' + nb + '_column').style.display = "none";
                document.getElementById('sql_' + nb + '_comparison').style.display = "grid";
                document.getElementById('sql_' + nb + '_data').style.display = "grid";
                document.getElementById('sql_' + nb + '_order').style.display = "none";

                document.getElementById('sql_' + nb + '_comparison').innerHTML = "=";
                document.getElementById('sql_' + nb + '_data').children[0].type = "number";
            }
        }

        function getColumn() {
            var response = null;

            if (last_entity !== 'NULL') {
                url = "{{ url('security_root_get_sql_entity_columns', {'entity': 'aaa'}) }}"
                url = url.replace('aaa', last_entity.toLowerCase())

                var xmlhttp = new XMLHttpRequest();
                xmlhttp.open("GET", url, false);
                xmlhttp.send();

                response = JSON.parse(xmlhttp.response)
            } else {
                response = ["SELECT ENTITY"];
            }

            result = '';

            response.forEach(function(elt) {
                result += "<option>" + elt + "</option>"
            })

            for (var i = 1; i <= filter_nb; i++) {
                document.getElementById('sql_' + i + '_column').children[0].innerHTML = result
            }
        }

        function getAdvParam() {
            param = {}
            param.select = []
            param.where = []
            param.orderby = {}
            param.limit = null

            for (var i = 1; i <= filter_nb; i++) {
                if (i == 1) {
                    param.select.push(document.getElementById('sql_1_column').children[0].value)
                } else {
                    operation = document.getElementById('sql_' + i + '_operation').children[0].value
                    if (operation == "SELECT") {
                        param.select.push(document.getElementById('sql_' + i + '_column').children[0].value)
                    } else if (operation == "WHERE") {
                        param.where.push(
                            {
                                column: document.getElementById('sql_' + i + '_column').children[0].value,
                                comparison: document.getElementById('sql_' + i + '_comparison').children[0].value,
                                data: document.getElementById('sql_' + i + '_data').children[0].value
                            }
                        );
                    } else if (operation == "ORDER BY") {
                        param.orderby.column = document.getElementById('sql_' + i + '_column').children[0].value
                        param.orderby.order = document.getElementById('sql_' + i + '_order').children[0].value
                    } else if (operation == "LIMIT") {
                        param.limit = document.getElementById('sql_' + i + '_data').children[0].value
                    }
                }
            }

            return "q=" + encodeURI(JSON.stringify(param))
        }

        changeFilter()
        getColumn()
    </script>
</div>
<div class="tabContent" id="manage_policy" style="grid-template-rows: auto auto 500px auto 500px auto;">
    <h1>{{ 'manage_policy'|trans }}</h1>
    <h2>License</h2><h2>Privacy Policy</h2>
    {{ form_widget(form.license) }}
    {{ form_widget(form.privacy_policy) }}
    <h2>Cookie Policy</h2><h2>Code Of Conduct</h2>
    {{ form_widget(form.cookie_policy) }}
    {{ form_widget(form.code_of_conduct) }}
    <label class="submit" for="form_submit" style="grid-column: 1/3;">{{ 'edit'|trans }}</label>
</div>
{{ form_end(form) }}
{% endblock %}

{% block js %}
<script>
    function openTab(tabName) {
        tabcontent = document.getElementsByClassName("tabContent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        document.getElementById(tabName).style.display = "grid";
    }

    function openSubTab(subTabName) {
        tabcontent = document.getElementsByClassName("subTabContent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        document.getElementById(subTabName).style.display = "grid";
        document.getElementById('submit_authorization').style.display = "block";
    }
</script>
{% endblock %}
