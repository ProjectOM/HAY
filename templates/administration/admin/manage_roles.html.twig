<div class="tabContent" id="manage_roles">
    <h1>{{ 'manage_roles'|trans }}</h1>
    <div>
        <div style="height: 50px;">
            <input class="search" style="width: calc(100% - 53px);" type="search" placeholder="{{ 'user_id'|trans }}" id="userSearch" />
            <button class="confirm" type="button" onclick="searchUserById()"><i class="icofont-search"></i></button>
        </div>
        <div class="userRolesShow fs20">
            <img id="userImg" src="/ressources/icon.svg" height="150px" width="150px" />
            <span id="userInfo" style="display: flex; align-items: center;">{{ 'first_name'|trans }} / {{ 'last_name'|trans }}<br />{{ 'username'|trans }}</span>
            <span id="nPosts" style="text-align: center;">xxx</span><span>{{ 'number_of_posts'|trans }}</span>
            <span id="nComments" style="text-align: center;">xxx</span><span>{{ 'number_of_comments'|trans }}</span>
            <span id="nFriends" style="text-align: center;">xxx</span><span>{{ 'number_of_friends'|trans }}</span>
            <span id="dSignUp" style="text-align: center;">xxxx</span><span>{{ 'date_sign_up'|trans }}</span>
        </div>
    </div>
    <div class="userRolesEdit">
        <h1>{{ 'his_roles'|trans }}</h1>
        <div class="fs50" style="display: grid; grid-template-columns: 90% 10%; grid-template-rows: auto 35px; margin: 50px;">
            <span id="userRoles" class="user" style="grid-column: 1/3; text-align: center; border-top-left-radius: 20px; border-top-right-radius: 20px;">{{ 'user'|trans }}</span>
            <select id="userRolesSelect" style="border: 0; text-align: center; cursor: pointer;">
                <option value="user" selected>{{ 'user'|trans }}</option>
                <option value="helper">{{ 'helper'|trans }}</option>
                <option value="mod">{{ 'mod'|trans }}</option>
                <option value="dev">{{ 'dev'|trans }}</option>
                <option value="design">{{ 'design'|trans }}</option>
                <option value="trans">{{ 'trans'|trans }}</option>
                {% if is_granted('ROLE_ROOT') %}<option value="admin">{{ 'admin'|trans }}</option>{% endif %}
                {% if is_granted('ROLE_OWNER') %}<option value="root">{{ 'root'|trans }}</option>{% endif %}
            </select>
            <button type="button" style="border: 0; background-color: blue; color: white; cursor: pointer;" onclick="changeUserRole()"><i class="icofont-arrow-right"></i></button>
        </div>
    </div>
    <script>
        // DO NOT PUT THESE FUNCTIONS IN COMMON FILES (FOR OBVIOUS SECURITY REASONS)

        function searchUserById() {
            user_search = "{{ url('administration_admin_get_roles', {'user': 'aaa'}) }}"

            user_search = user_search.replace('aaa', document.getElementById('userSearch').value)

            var xmlhttp = new XMLHttpRequest();
            xmlhttp.responseType = "json";
            xmlhttp.onreadystatechange = function() {
                user = "{{ 'user'|trans }}"
                helper = "{{ 'helper'|trans }}"
                dev = "{{ 'dev'|trans }}"
                design = "{{ 'design'|trans }}"
                trans = "{{ 'trans'|trans }}"
                mod = "{{ 'mod'|trans }}"
                admin = "{{ 'admin'|trans }}"
                root = "{{ 'root'|trans }}"
                owner = "{{ 'owner'|trans }}"

                user_info = this.response
                document.getElementById('userImg').src = user_info.img
                document.getElementById('userInfo').innerHTML = user_info.name
                if (user_info.username) {
                    document.getElementById('userInfo').innerHTML += '<br />' + user_info.username
                }
                document.getElementById('nPosts').innerHTML = user_info.nbPosts
                document.getElementById('nComments').innerHTML = user_info.nbComments
                document.getElementById('nFriends').innerHTML = user_info.nbFriends
                document.getElementById('dSignUp').innerHTML = user_info.dateSignUp

                role = user_info.roles[0]

                switch (role) {
                    case 'ROLE_USER':
                        usr_role = "user";
                        usr_trans = user;
                        break;
                    case 'ROLE_HELPER':
                        usr_role = "helper";
                        usr_trans = helper;
                        break;
                    case 'ROLE_DEV':
                        usr_role = "dev";
                        usr_trans = dev;
                        break;
                    case 'ROLE_DESIGN':
                        usr_role = "design";
                        usr_trans = design;
                        break;
                    case 'ROLE_TRANS':
                        usr_role = "trans";
                        usr_trans = trans;
                        break;
                    case 'ROLE_MOD':
                        usr_role = "mod";
                        usr_trans = mod;
                        break;
                    case 'ROLE_ADMIN':
                        usr_role = "admin";
                        usr_trans = admin;
                        break;
                    case 'ROLE_ROOT':
                        usr_role = "root";
                        usr_trans = root;
                        break;
                    case 'ROLE_OWNER':
                        usr_role = "owner";
                        usr_trans = owner;
                        break;
                }

                document.getElementById('userRoles').className = usr_role
                document.getElementById('userRoles').innerHTML = usr_trans
                document.getElementById('userRolesSelect').value = usr_role

                if (usr_role == "owner"{% if not is_granted('ROLE_OWNER') %} || usr_role == "root"{% if not is_granted('ROLE_ROOT') %} || usr_role == "admin"{% endif %}{% endif %}) {
                    document.getElementById('userRolesSelect').disabled = true
                } else {
                    document.getElementById('userRolesSelect').disabled = false
                }
            };
            xmlhttp.open("GET", user_search, true);
            xmlhttp.send();
        }

        function disableSendForm(event) {
            if (event.which === 13) {
                event.preventDefault()
                searchUserById()
            }
        }

        document.getElementById('userSearch').addEventListener("keypress", disableSendForm)

        function changeUserRole() {
            user_role_url = "{{ url('administration_admin_manage_roles', {'new_role': 'aaa', 'user': 'bbb'}) }}"

            user_role_url = user_role_url.replace('aaa', document.getElementById('userRolesSelect').value)
            user_role_url = user_role_url.replace('bbb', document.getElementById('userSearch').value)

            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function() {
                searchUserById()
            };
            xmlhttp.onerror = function() {
            };
            xmlhttp.open("GET", user_role_url, true);
            xmlhttp.send();
        }
    </script>
</div>
